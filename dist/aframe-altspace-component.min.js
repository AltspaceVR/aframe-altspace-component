!function(e){function t(n){if(a[n])return a[n].exports;var r=a[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var a={};return t.m=e,t.c=a,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("altspace",{schema:{usePixelScale:{type:"boolean","default":"false"}},init:function(){if(!(this.el.object3D instanceof THREE.Scene))return void console.warn("aframe-altspace-component can only be attached to a-scene");if(window.altspace&&window.altspace.inClient){var e=this.el.object3D,t=document.querySelector("a-cursor")||document.querySelector("a-entity[cursor]");t&&(t.setAttribute("material","transparent",!0),t.setAttribute("material","opacity",0));var a=null;e.addEventListener("cursordown",function(e){a=e.target}),e.addEventListener("cursorup",function(e){e.target.uuid===a.uuid&&(e.target.el.emit("click",{target:e.target.el}),t.emit("click",{target:e.target.el})),a=null})}},update:function(e){if(window.altspace&&window.altspace.inClient){var t=this.el.object3D;this.data.usePixelScale||altspace.getEnclosure().then(function(e){t.scale.multiplyScalar(e.pixelsPerMeter)});var a=this.el.renderer=altspace.getThreeJSRenderer(),n=function(){};a.setSize=n,a.setPixelRatio=n,a.setClearColor=n,a.clear=n,a.enableScissorTest=n,a.setScissor=n,a.setViewport=n,a.getPixelRatio=n,a.getMaxAnisotropy=n,a.setFaceCulling=n,a.context={canvas:{}},a.shadowMap={}}},remove:function(){},pause:function(){},play:function(){}})}]);